{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","error","isLoaded","imageURL","this","Navbar","bg","expand","Container","Brand","className","style","marginTop","message","src","alt","Button","variant","size","margin","onClick","getNewMeme","bind","setState","fetch","then","res","json","result","url","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAqEeA,E,kDA/Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,SAAU,MALK,E,0CAQjB,WACE,MAAsCC,KAAKJ,MAAnCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,SAEzB,OACE,gCACE,cAACE,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,KAAzB,SACE,cAACC,EAAA,EAAD,UACA,cAACH,EAAA,EAAOI,MAAR,CAAcC,UAAU,aAAxB,6BAGF,eAACF,EAAA,EAAD,CAAWE,UAAU,cAAcC,MAAO,CAACC,UAAW,IAAtD,UACGX,GAAS,0CAAaA,EAAMY,YAC3BX,GAAY,6CACbC,GAAY,qBAAKW,IAAKX,EAAUY,IAAI,SACrC,cAACC,EAAA,EAAD,CAAQC,QAAQ,eAAeC,KAAK,KAAKP,MAAO,CAACQ,OAAQ,QAASC,QAAShB,KAAKiB,WAAWC,KAAKlB,MAAhG,8B,+BAOR,WACEA,KAAKiB,e,wBAKP,WAAa,IAAD,OACNjB,KAAKJ,MAAME,UACbE,KAAKmB,SAAS,CACZrB,UAAU,IAGdsB,MAAM,uDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKL,SAAS,CACZrB,UAAU,EACVC,SAAUyB,EAAOC,SAMrB,SAAC5B,GACC,EAAKsB,SAAS,CACZrB,UAAU,EACVD,iB,GAzDM6B,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e56b14eb.chunk.js","sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { Container, Button, Navbar} from 'react-bootstrap';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      imageURL: null\n    };\n  }\n    render(){\n      const { error, isLoaded, imageURL } = this.state;\n      \n      return (\n        <div>\n          <Navbar bg=\"dark\" expand=\"lg\">\n            <Container>\n            <Navbar.Brand className=\"text-light\">React-Memes</Navbar.Brand>\n            </Container>\n          </Navbar>\n          <Container className=\"text-center\" style={{marginTop: 20}}>\n            {error && <div>Error: {error.message}</div>}\n            {!isLoaded && <div>Loading...</div>}\n            {imageURL && <img src={imageURL} alt='meme'/>}\n            <Button variant=\"outline-dark\" size=\"lg\" style={{margin: \"1rem\"}} onClick={this.getNewMeme.bind(this)}>New Meme</Button>\n          </Container>\n        </div>\n      );\n    }\n\n\n    componentDidMount(){\n      this.getNewMeme();\n    }\n    // shouldComponentUpdate(prevProps){\n    //   return prevProps.isLoaded !== this.props.isLoaded\n    // }\n    getNewMeme(){\n      if (this.state.isLoaded){\n        this.setState({\n          isLoaded: false,\n        });\n      }\n      fetch(`https://meme-api.herokuapp.com/gimme/wholesomememes`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            imageURL: result.url\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}